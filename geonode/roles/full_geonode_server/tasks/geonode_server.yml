---

- name: Get geonode
  git:
    repo: https://github.com/GeoNode/geonode.git
    dest: "{{ geonode_dir }}"
    version: 2.6.x
    depth: 10


- name: Install python requirements
  pip:
    name: "{{ geonode_dir }}" # requirements.txt

- name: Install python six
  pip:
    name: six # Apache does not find six :/
    state: latest
- name: Add apache2 conf
  template:
    src: conf/geonode.conf
    dest: /etc/apache2/sites-available/

- name: Enable apache proxy_http mod
  apache2_module:
    state: present
    name: proxy_http

- name: Disable default site
  shell: a2dissite 000-default

- name: Enable geonode site
  shell: a2ensite geonode

- name: Change project owner
  file:
    path: "{{ geonode_dir }}"
    owner: geonode
    state: directory
    recurse: yes

- name: Create default directories
  file:
    path: "{{ item }}"
    state: directory
    owner: geonode
    group: www-data
    mode: 0777
    recurse: yes
  with_items:
    - "{{ geonode_dir }}/geonode/uploaded/thumbs"
    - "{{ geonode_dir }}/geonode/uploaded/layer"

- name: Run collect static
  shell: python manage.py collectstatic --noinput
  args:
    chdir: "{{ geonode_dir }}"
  become_user: geonode

- name: Change static owner and group
  file:
    path: "{{ geonode_dir }}/geonode/static_root/"
    owner: www-data
    group: www-data
    recurse: yes
    state: directory

- name: Copy django settings file
  shell: "cp {{ geonode_dir }}geonode/local_settings.py.qgis.sample {{ geonode_dir }}geonode/local_settings.py"
  become_user: geonode

- name: Set GeoNode host
  lineinfile:
    path: "{{geonode_dir}}/geonode/local_settings.py"
    regexp: 'SITEURL = .*'
    line: 'SITEURL = os.environ.get("SITEURL", "http://localhost/")'

- name: Add ALLOWED_HOSTS
  blockinfile:
    path: "{{ geonode_dir }}/geonode/local_settings.py"
    marker: "#!-- {mark} ANSIBLE MANAGED BLOCK -->"
    insertafter: "SITE_URL.*"
    content: |
      ALLOWED_HOSTS = [os.environ.get("ALLOWED_HOST_IP", '127.0.0.1'), os.environ.get("ALLOWED_HOST_NAME", 'localhost'), '::1']
      PROXY_ALLOWED_HOSTS = (os.environ.get("ALLOWED_HOST_IP", '127.0.0.1'), os.environ.get("ALLOWED_HOST_NAME", 'localhost'), '::1')
      POSTGIS_VERSION = (2, 1, 2)
    
- name: Add default database host
  blockinfile:
    path: "{{ geonode_dir }}/geonode/local_settings.py"
    marker: "#!-- {mark} default database ANSIBLE MANAGED BLOCK -->"
    insertafter: ".*django.db.backends.postgresql_psycopg2.*"
    content: |
      'HOST': '{{ database_host }}',

- name: Add geonetwork configuration
  lineinfile:
    path: /home/geonode/geonode/geonode/local_settings.py
    regexp: "'ENGINE': 'geonode.catalogue.backends.pycsw_local',"
    line: ""

- name: Remove default URL for catalog
  lineinfile:
    path: /home/geonode/geonode/geonode/local_settings.py
    regexp: "'URL': '%scatalogue/csw' % SITEURL,"
    line: ""

- name: Change OGC server location
  lineinfile:
    path: /home/geonode/geonode/geonode/local_settings.py
    regexp: "'LOCATION': SITEURL.*"
    line: "'LOCATION': SITEURL + 'geonetwork/',"

- name: Change OGC server public location
  lineinfile:
    path: /home/geonode/geonode/geonode/local_settings.py
    regexp: "'PUBLIC_LOCATION': SITEURL.*"
    line: "'PUBLIC_LOCATION': SITEURL + 'geonetwork/',"

- name: Add geonetwork configuration
  blockinfile:
    path: /home/geonode/geonode/geonode/local_settings.py
    marker: "#!-- {mark} geonetwork configuation ANSIBLE MANAGED BLOCK -->"
    insertafter: "# The underlying CSW implementation"
    content: |
      'ENGINE': 'geonode.catalogue.backends.geonetwork',
      'URL': '{{ geoserver_url }}/geonetwork/srv/en/csw',


- name: Fix OGC LOG
  lineinfile:
    path: /home/geonode/geonode/geonode/local_settings.py
    regexp: "'LOG_FILE':.*"
    line: "'LOG_FILE' : '/dev/stdout',"