#!/usr/bin/env bash

ProgName=$(basename $0);
geoandino_name="geonode";
db_name="db";
APP_DIR=/etc/geoandino
COMPOSE_FILE="$APP_DIR/docker-compose.yml"

info() {
    echo -e "\e[38;5;75m\e[1m[ INFO ]\e[0m $1";
}

success() {
    echo -e "\e[38;5;76m\e[1m[ SUCCESS ]\e[0m $1";   
}

error() {
    echo -e "\e[1m\e[31m[ ERROR ]\e[0m $1";
}

sub_help(){
    echo "Uso: $ProgName <subcomando>"
    echo "Subcomandos:"
    echo "    up [servicios]        Levantar la aplicacion (Regenerar si es necesario)"
    echo "    exec [comandos]       Ejecutar un comando en la aplicacion de geoandino"
    echo "    manage [commandos]    Correr comando con ./manage.py"
    echo "    wait                  Esperar hasta que las dependencias estén disponibles"
    echo "    migrate               Migrar la base de datos"
    echo "    init                  Cargar los datos iniciales de geonode"
    echo "    restart [servicios]   Reiniciar los servicios"
    echo "    stop [servicios]      Detener los servicios"
    echo "    down                  Borrar los datos de la aplicación"
    echo "    explode               Borrar la aplicación"
    echo "    post-update           Correr comando necesarios después de una actualización"
    echo ""
}

check_permissions() {
    if [[ $(/usr/bin/id -u) -ne 0 ]]; then
      error "Se necesitan permisos de root (sudo)";
      exit 1;
    fi
}

sub_command() {
    # cd'ing is required because docker-compose.yml requires that the .env file is in the _working directory_
    local _command="docker-compose -f $COMPOSE_FILE $@;"
    bash -c "cd $APP_DIR && $_command";
}

sub_exec() {
    # GEOANDINO_YES_INSTALL variable is used for avoiding user interaction
    # Also used in installer.sh
    local _command="sub_command exec ";
    if [ -n "$GEOANDINO_YES_INSTALL" ]; then
        info "Disabling pseudo-tty allocation"
        _command="$_command -T"
    fi
    eval "$_command $geoandino_name $@";
}

sub_port-update() {
    # This commands must be idempotent
    # Noop
    info "Ok"
}

sub_up(){
    sub_command up -d $@;
}

sub_stop(){
    sub_command stop $@;
}

sub_down(){
    sub_command down -v;
}

sub_restart() {
    sub_command restart $@;
}

sub_manage() {
    sub_exec python manage.py $@;
}

sub_wait() {
    sub_exec /home/geonode/bins/wait-for-services.sh
}

sub_migrate(){
    # Recommended by https://lists.osgeo.org/pipermail/geonode-users/2016-July/002102.html
    sub_manage makemigrations;
    sub_manage migrate account --noinput;
    sub_manage migrate --noinput;
}

sub_init() {
    sub_manage loaddata /home/geonode/geoandino/geoandino/fixtures/initial_data_geoandino.json
}



sub_explode() {
    check_permissions;
    sub_down;
    rm $APP_DIR -rf;
    rm /usr/local/bin/geoandino-ctl -rf;
}

subcommand=$1
case $subcommand in
    "" | "-h" | "--help")
        sub_help
        ;;
    *)
        shift
        sub_${subcommand} $@
        rc=$?
        if [ $rc = 127 ]; then
            echo "Error: '$subcommand' no es un subcomando conocido." >&2
            echo "       Corre '$ProgName --help' para listar los comandos." >&2
            exit 1;
        fi
        if [ $rc != 0 ]; then
            exit $rc;
        fi
esac
